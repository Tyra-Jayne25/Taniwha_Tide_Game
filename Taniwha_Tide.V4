import pygame
import sys
import random

# --- Initialize ---
pygame.init()
pygame.font.init()

# --- Constants ---
WINDOW_WIDTH = 1000
WINDOW_HEIGHT = 720
FPS = 60
WHITE = (255, 255, 255)
WATER_BLUE = (0, 105, 148)
SEA_BLUE = (70, 130, 180)
BUTTON_COLOR = (0, 150, 200)
BUTTON_HOVER = (0, 180, 230)
TANIWHA_GREEN = (34, 139, 34)
MATH_RING_COLOR = (0, 255, 0)
MATH_RING_TRIGGERED = (255, 0, 0)
RED = (255, 50, 50)
BROWN = (139, 69, 19)
PINK = (255, 182, 193)

# --- Display ---
screen = pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HEIGHT))
pygame.display.set_caption("Taniwha Tide")
clock = pygame.time.Clock()

# --- Fonts ---
try:
    title_font = pygame.font.SysFont("Arial", 72, bold=True)
    button_font = pygame.font.SysFont("Arial", 36)
    health_font = pygame.font.SysFont("Arial", 28)
except:
    title_font = pygame.font.Font(None, 72)
    button_font = pygame.font.Font(None, 36)
    health_font = pygame.font.Font(None, 28)

# --- Button Setup ---
start_button = pygame.Rect(WINDOW_WIDTH//2 - 100, WINDOW_HEIGHT//2 + 50, 200, 60)

# --- Taniwha Sprite ---
taniwha_sprite = pygame.Surface((300, 40))
taniwha_sprite.fill(TANIWHA_GREEN)
taniwha_rect = taniwha_sprite.get_rect(center=(WINDOW_WIDTH//2, WINDOW_HEIGHT//2 + 150))
taniwha_speed = 5

# --- Math Ring ---
math_ring = pygame.Rect(350, 250, 100, 100)
ring_triggered = False

# --- Game State ---
current_scene = "menu"
camera_x = 0
lives = 5

# --- Background Image ---
background_image = pygame.image.load("Lvl1_water_background.png").convert()
background_image = pygame.transform.scale(background_image, (WINDOW_WIDTH, WINDOW_HEIGHT))
background_width = background_image.get_width()

# --- Obstacles ---
obstacles = []
spacing = 1000
for i in range(5):
    net = pygame.Rect(1200 + i * spacing, 350, 30, 30)
    jelly = pygame.Rect(1600 + i * spacing, 280, 30, 30)
    obstacles.append(("net", net))
    obstacles.append(("jelly", jelly))

# --- Draw Menu ---
def draw_menu():
    screen.fill(WATER_BLUE)
    title_text = title_font.render("Taniwha Tide", True, WHITE)
    title_rect = title_text.get_rect(center=(WINDOW_WIDTH//2, WINDOW_HEIGHT//2 - 100))
    screen.blit(title_text, title_rect)

    mouse_pos = pygame.mouse.get_pos()
    button_color = BUTTON_HOVER if start_button.collidepoint(mouse_pos) else BUTTON_COLOR
    pygame.draw.rect(screen, button_color, start_button)

    button_text = button_font.render("Start", True, WHITE)
    button_rect = button_text.get_rect(center=start_button.center)
    screen.blit(button_text, button_rect)

# --- Health Bar ---
def draw_health():
    label = health_font.render(f"Lives: {lives}", True, RED)
    screen.blit(label, (20, 20))

# --- Draw Level 1 ---
def draw_level_one():
    rel_x = camera_x % background_width
    screen.blit(background_image, (-rel_x, 0))
    if rel_x < WINDOW_WIDTH:
        screen.blit(background_image, (-rel_x + background_width, 0))

    pygame.draw.rect(screen, MATH_RING_TRIGGERED if ring_triggered else MATH_RING_COLOR, math_ring)
    screen.blit(taniwha_sprite, (taniwha_rect.x, taniwha_rect.y))

    for kind, rect in obstacles:
        shifted = pygame.Rect(rect.x - camera_x, rect.y, rect.width, rect.height)
        color = BROWN if kind == "net" else PINK
        pygame.draw.rect(screen, color, shifted)

    draw_health()

# --- Movement ---
def handle_movement(keys):
    global camera_x
    if keys[pygame.K_LEFT]:
        taniwha_rect.x -= taniwha_speed
        if taniwha_rect.x < 100 and camera_x > 0:
            camera_x -= taniwha_speed
    if keys[pygame.K_RIGHT]:
        taniwha_rect.x += taniwha_speed
        if taniwha_rect.x > WINDOW_WIDTH - 400:
            camera_x += taniwha_speed
    if keys[pygame.K_UP]:
        taniwha_rect.y -= taniwha_speed
    if keys[pygame.K_DOWN]:
        taniwha_rect.y += taniwha_speed

# --- Trigger Logic ---
def check_ring_trigger():
    global ring_triggered
    ring_triggered = taniwha_rect.colliderect(math_ring)

# --- Collision Detection ---
def check_obstacle_collision():
    global lives
    for kind, rect in obstacles:
        shifted = pygame.Rect(rect.x - camera_x, rect.y, rect.width, rect.height)
        if taniwha_rect.colliderect(shifted):
            lives -= 1
            print(f"Collision with {kind}! Lives left: {lives}")
            obstacles.remove((kind, rect))
            break

# --- Main Loop ---
def main():
    global current_scene

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            elif event.type == pygame.MOUSEBUTTONDOWN:
                if current_scene == "menu" and start_button.collidepoint(event.pos):
                    print("Start button clicked â€” entering Level 1")
                    current_scene = "level1"

        keys = pygame.key.get_pressed()
        if current_scene == "menu":
            draw_menu()
        elif current_scene == "level1":
            handle_movement(keys)
            check_ring_trigger()
            check_obstacle_collision()
            draw_level_one()

        pygame.display.flip()
        clock.tick(FPS)

main()