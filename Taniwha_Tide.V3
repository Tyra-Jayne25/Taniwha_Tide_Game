import pygame
import sys
import random

# --- Initialize ---
pygame.init()

# --- Constants ---
WINDOW_WIDTH = 1000
WINDOW_HEIGHT = 720
FPS = 60
WHITE = (255, 255, 255)
RED = (255, 50, 50)
TANIWHA_GREEN = (34, 139, 34)
BROWN = (139, 69, 19)
PINK = (255, 182, 193)

# --- Display ---
screen = pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HEIGHT))
pygame.display.set_caption("Taniwha Tide")
clock = pygame.time.Clock()

# --- Game State ---
camera_x = 0
lives = 5

# --- Background Image ---
background_image = pygame.image.load("Lvl1_water_background.png").convert()
background_image = pygame.transform.scale(background_image, (WINDOW_WIDTH, WINDOW_HEIGHT))
background_width = background_image.get_width()

# --- Taniwha Sprite ---
taniwha_sprite = pygame.Surface((60, 40))  # Simple placeholder
taniwha_sprite.fill(TANIWHA_GREEN)
taniwha_rect = taniwha_sprite.get_rect(center=(WINDOW_WIDTH//2, WINDOW_HEIGHT//2 + 150))
taniwha_speed = 6

# --- Obstacles ---
obstacles = []
spacing = 1000
for i in range(5):
    net = pygame.Rect(1200 + i * spacing, 350, 30, 30)
    jelly = pygame.Rect(1600 + i * spacing, 280, 30, 30)
    obstacles.append(("net", net))
    obstacles.append(("jelly", jelly))

# --- Health Bar ---
def draw_health():
    font = pygame.font.SysFont("Arial", 28)
    label = font.render(f"Lives: {lives}", True, RED)
    screen.blit(label, (20, 20))

# --- Draw Level 1 ---
def draw_level_one():
    # Scrollable background
    rel_x = camera_x % background_width
    screen.blit(background_image, (-rel_x, 0))
    if rel_x < WINDOW_WIDTH:
        screen.blit(background_image, (-rel_x + background_width, 0))

    screen.blit(taniwha_sprite, (taniwha_rect.x, taniwha_rect.y))

    for kind, rect in obstacles:
        shifted = pygame.Rect(rect.x - camera_x, rect.y, rect.width, rect.height)
        color = BROWN if kind == "net" else PINK
        pygame.draw.rect(screen, color, shifted)

    draw_health()

# --- Movement ---
def handle_movement(keys):
    global camera_x
    if keys[pygame.K_LEFT]:
        taniwha_rect.x -= taniwha_speed
        if taniwha_rect.x < 100 and camera_x > 0:
            camera_x -= taniwha_speed
    if keys[pygame.K_RIGHT]:
        taniwha_rect.x += taniwha_speed
        if taniwha_rect.x > WINDOW_WIDTH - 400:
            camera_x += taniwha_speed
    if keys[pygame.K_UP]:
        taniwha_rect.y -= taniwha_speed
    if keys[pygame.K_DOWN]:
        taniwha_rect.y += taniwha_speed

# --- Collision ---
def check_obstacle_collision():
    global lives
    for kind, rect in obstacles:
        shifted = pygame.Rect(rect.x - camera_x, rect.y, rect.width, rect.height)
        if taniwha_rect.colliderect(shifted):
            lives -= 1
            print(f"Collision with {kind}! Lives left: {lives}")
            obstacles.remove((kind, rect))
            break

# --- Main Loop ---
def main():
    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit(); sys.exit()

        keys = pygame.key.get_pressed()
        handle_movement(keys)
        check_obstacle_collision()
        draw_level_one()

        pygame.display.flip()
        clock.tick(FPS)

main()
